global:
  namespaces:
    - dev
    - staging
    - qa
    - prod

cast-service:
  image:
    repository: jenkins_devops_exams_cast_service
    pullPolicy: IfNotPresent
  metadata:
    label: cast-service
  spec:
    replicaCount: 1
    containers:
      command: "bash"
      cmdoption: "-c"
      args: "uvicorn main:app --reload --host 0.0.0.0 --port 8000" 
  service:
    name: cast-service
    type: NodePort
    port: 8002
    targetPort: 8000
  volumeMounts:
    - mountPath: "/home/cast-data"
      name: cast-data
  volumes:
    - name: cast-data
      persistentVolumeClaim:
        claimName: cast-pvc
  
  pvc:
    name: cast-pvc
    accessMode: ReadWriteOnce
    storage: 100Mi
    storageClassName: local-path

postgres-cast:
  image:
    repository: postgres
    tag: 12.1-alpine
    pullPolicy: IfNotPresent
  metadata:
    label: cast-db
  spec:
    replicaCount: 1
  env:
    - POSTGRES_DB: cast_db_dev 
    
  service:
    name: cast-db
    type: ClusterIP
    port: 5433
    targetPort: 5432
  volumeMounts:
    - mountPath: "/var/lib/postgresql/data"
      name: postgres-data-cast
  volumes:
    - name: postgres-data-cast
      persistentVolumeClaim:
        claimName: postgres-cast-pvc
  pvc:
    name: postgres-cast-pvc
    accessMode: ReadWriteOnce
    storage: 5Gi
    storageClassName: local-path

movie-service:
  image:
    repository: jenkins_devops_exams_movie_service
    pullPolicy: IfNotPresent
  metadata:
    label: movie-service
  spec:
    replicaCount: 1
    containers:
      command: "bash"
      cmdoption: "-c"
      args: "uvicorn main:app --reload --host 0.0.0.0 --port 8000"
  service:
    name: movie-service
    type: NodePort
    port: 8001
    targetPort: 8000
  volumeMounts:
    - mountPath: "/home/movie-data"
      name: movie-data
  volumes:
    - name: movie-data
      persistentVolumeClaim:
        claimName: movie-pvc
  pvc:
    name: movie-pvc
    accessMode: ReadWriteOnce
    storage: 100Mi
    storageClassName: local-path

postgres-movie:
  image:
    repository: postgres
    tag: 12.1-alpine
  metadata:
    label: movie-db
  spec:
    replicaCount: 1
  env:
    - POSTGRES_DB: movie_db_dev

  service:
    name: movie-db
    type: ClusterIP
    port: 5432
    targetPort: 5432
  volumeMounts:
    - mountPath: "/var/lib/postgresql/data"
      name: postgres-data-movie
  volumes:
    - name: postgres-data-movie
      persistentVolumeClaim:
        claimName: postgres-movie-pvc
  pvc:
    name: postgres-movie-pvc
    accessMode: ReadWriteOnce
    storage: 5Gi
    storageClassName: local-path

nginx:
  image:
    repository: nginx
    tag: label
  metadata:
    label: nginx
  spec:
    replicaCount: 1
  service:
    name: nginx
    type: NodePort
    port: 8080
    targetPort: 8080
  volumeMounts:
    - mountPath: "/etc/nginx/conf.d/default.conf"
      name: nginx-conf
      subPath: default.conf
  volumes:
    - name: nginx-conf
        configMap:
          name: nginx-configmap
