global:
  namespaces:
    - dev
    - staging
    - qa
    - prod

cast_service:
  image:
    repository: jenkins_devops_exams_cast_service
    pullPolicy: IfNotPresent
  metadata:
    label: cast-service
  spec:
    replicaCount: 1
    containers:
      command: "bash"
      cmdoption: "-c"
      args: "uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"
  env:
    ENV_URI: DATABASE_URI 
  service:
    name: cast-service
    type: NodePort
    port: 8002
    targetPort: 8000
  volumeMounts:
    - mountPath: "/home/cast-data"
      name: cast-data
  volumes:
    - name: cast-data
      persistentVolumeClaim:
        claimName: cast-pvc
  configmap: cast-configmap
  
  pvc:
    name: cast-pvc
    accessMode: ReadWriteOnce
    storage: 100Mi
    storageClassName: local-path

cast_db:
  image:
    repository: postgres
    tag: 12.1-alpine
    pullPolicy: IfNotPresent
  metadata:
    label: cast-db
  spec:
    replicaCount: 1
  env:
    ENV_DB: cast_db_dev
    ENV_DB_USER: POSTGRES_USER
    ENV_DB_PASSWORD: POSTGRES_PASSWORD 
    
  service:
    name: cast-db
    type: ClusterIP
    port: 5433
    targetPort: 5432
  volumeMounts:
    - mountPath: "/var/lib/postgresql/data"
      name: postgres-data-cast
  volumes:
    - name: postgres-data-cast
      persistentVolumeClaim:
        claimName: postgres-cast-pvc
  secret: postgres-cast

  pvc:
    name: postgres-cast-pvc
    accessMode: ReadWriteOnce
    storage: 5Gi
    storageClassName: local-path

movie_service:
  image:
    repository: jenkins_devops_exams_movie_service
    pullPolicy: IfNotPresent
  metadata:
    label: movie-service
  spec:
    replicaCount: 1
    containers:
      command: "bash"
      cmdoption: "-c"
      args: "uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"
  env:
    ENV_URI: DATABASE_URI
    ENV_HOST: CAST_SERVICE_HOST_URL     
  service:
    name: movie-service
    type: NodePort
    port: 8001
    targetPort: 8000
  volumeMounts:
    - mountPath: "/home/movie-data"
      name: movie-data
  volumes:
    - name: movie-data
      persistentVolumeClaim:
        claimName: movie-pvc
  configmap: movie-configmap

  pvc:
    name: movie-pvc
    accessMode: ReadWriteOnce
    storage: 100Mi
    storageClassName: local-path

movie_db:
  image:
    repository: postgres
    tag: 12.1-alpine
  metadata:
    label: movie-db
  spec:
    replicaCount: 1
  env:
    POSTGRES_DB: movie_db_dev
    ENV_DB_USER: POSTGRES_USER
    ENV_DB_PASSWORD: POSTGRES_PASSWORD

  service:
    name: movie-db
    type: ClusterIP
    port: 5432
    targetPort: 5432
  volumeMounts:
    - mountPath: "/var/lib/postgresql/data"
      name: postgres-data-movie
  volumes:
    - name: postgres-data-movie
      persistentVolumeClaim:
        claimName: postgres-movie-pvc
  secret: postgres-movie

  pvc:
    name: postgres-movie-pvc
    accessMode: ReadWriteOnce
    storage: 5Gi
    storageClassName: local-path

nginx:
  image:
    repository: nginx
    tag: label
  metadata:
    label: nginx
  spec:
    replicaCount: 1
  service:
    name: nginx
    type: NodePort
    port: 8080
    targetPort: 8080
  configmap: nginx-configmap
  volumeMounts:
    - mountPath: "/etc/nginx/conf.d/default.conf"
      name: nginx-conf
      subPath: default.conf
  volumes:
    - name: nginx-conf
      configMap:
        name: nginx-configmap
